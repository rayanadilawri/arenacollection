body {
  cursor: url('../images/cursor.png'), auto;
}

.cinzel  {
  font-family: "Cinzel", serif;
  font-optical-sizing: auto;
  font-style: normal;
}
.red-hat-display{
  font-family: "Red Hat Display", serif;
  font-optical-sizing: auto;
  font-style: normal;
}


:root {
  --big-size: 2em;
  --spacing: 1.5em;
  --base-size: 12px;
  --gutter: calc(3 * var(--base-size)); 
  --color--primary: black; 
  --color--secondary: rgb(138, 216, 22);
  --color--tertiary: rgb(42, 3, 3);
  --color--quartery: white;

  --color--green-1: #6B9A6F;     
  --color--green-2:#88B888;    
  --color--green-3: #237623;
  --color--green-4: #042604;
  
  --color--blue: rgb(68, 122, 238);
  --color-dark-blue: rgb(8, 39, 107);
  --color--blue-light: rgb(103, 144, 232);


  --title-size: 4.2em;
  --subheading-size: 1.4em;
  --subheading-size2: 1.2em;
  --body-size: 1.1em;

  --spacing-size: 2em;
  --spacing-size-body:1em;
  --nav-size: 1.2em;
}
 
/*https://codepen.io/MarioDesigns/pen/woJgeo*
/* https://stackoverflow.com/questions/70631090/keyframe-animation-is-not-working-on-the-right-margin-but-works-perfect-on-the-l*/
/* originally tried to do @keyframes floatanimation with transform and translate, but it was messing up the javascript function i built to randomize the blocks 
the first link taught me about how you make an element animate, which was helpful, but since It was conflciting with my javascript, I took it out. I then decided to look for other ways to implement the animation without transform and ttranslate and i found this second link. it taught me that you can use margin-top to create an animation by giving it different poitns from 0-100 to rotate through. this was applicible for my design as i wanted to emulate 
the shape and movement of a lilypad, and sicne I could not use transform / translate, margin-top was the best option to make my animatio nand my randomizer work*/ 

@keyframes floatAnimation {
  0% {
    margin-top: 0px;
  }
  50% {
    margin-top: 3px;
  }
  100% {
    margin-top: 0px;
  }
} 

@keyframes floatAnimation1 {
  0% {
    margin-top: 0px;
  }
  50% {
    margin-top: 6px;
  }
  100% {
    margin-top: 0px;
  }
}

@keyframes floatAnimation2 {
  0% {
    margin-top: 0px;
  }
  25% {
    margin-top: 1px;
  }
  75% {
    margin-top: 0px;
  }
}

@keyframes floatAnimation3 {
  0% {
    margin-top: 0px;
  }
  25% {
    margin-top: 4px;
  }
  75% {
    margin-top: 0px;
  }
}

.arrow {
  font-size: 70px ;
  padding: 1em;
  color: var(--color--green-4);
}

 p{
  padding-inline: var(--spacing);
  padding-block: calc(var(--base-size));
} 

.monet-cred {
  padding: 1em;
  font-style: italic;
  bottom: 0;
  right: 0;
  text-align: right; 
  position: absolute;
  font-weight: bold;
  font-family: "Red Hat Display", serif;
}



.nav-text {
  display: flex;
  flex-direction: column;  
  justify-content: center;
  align-items: center;   
  font-family: cinzel; 
}

.nav-text a{
  color : var(--color--green-3);
  font-size: var(--nav-size);
  font-family: cinzel;
}

.nav-text a:hover {
  color: var(--color--green-4);
  text-shadow:2px 1px 1px rgb(6, 65, 30);
  font-family: cinzel;
}

/* .button {
  background-color: var(--color--green-2);
  padding: 20px;
  border-radius: 50%;
  width: 80px;  
  height: 80px; 
  align-items: center;
  text-align: center;
} */

#index-button {
  color: black;
  background-color: aliceblue;
}

.top {
  position: relative;
  background-color: var(--color--green-1); 
  padding: var(--spacing-size);
}

.description-text 
{text-align: center;
padding: 0.5em;}

.middle {
height: 30%;
 border: var(--color--tertiary) 10px solid;
 background-repeat: no-repeat;
 background-position: center;
 background-size: cover;
 position: relative;
}

.quote {
  height: 12%;
  background-color: var(--color--green-1);
}

.quote p {
font-family: cinzel;
font-size: 1.1em;
color: var(--color--green-4);
text-align: center;
justify-content: center;

}

.bottom {
  background-color: var(--color--blue);
  padding-bottom: 10em;
  padding-left: 4em;
  padding-right: 4em;
}


.full {
  background-image: url(../images/default.jpg); 
}

body {
  font-size: var(--body-size);
  background-attachment: fixed;
  background-size: cover;
  background-position: center;
  color: var(--color--primary);
  overflow-x: hidden;
  height: 100%;
}



h1 {
 padding-top: var(--spacing-size);
  font-size: var(--title-size);
  color: var(--color--quartery);
  text-align: center;
  font-family: "Cinzel", serif;
}

h2 {
  padding-left: var(--spacing-size-body);
  padding-right: var(--spacing-size-body);
  font-size: var(--subheading-size);
  color: var(--color--quartery);
  text-align: center;
  font-family: "Red Hat Display", serif;

}

h3 {
  padding: var(--spacing-size-body);
  font-size: var(--subheading-size2);
  color: var(--color--quartery);
  text-align: center;
  font-family: "Red Hat Display", serif;

}

p, a{
  color: var(--color--green-5);
  font-family: "Red Hat Display", serif;
  font-size: 1.0em;
}


.count {
  text-align: center;
  color:white;
  font-family: cinzel;
}
 #channel-blocks {
  display: grid;
  grid-template-columns: repeat(2, 1fr); 
  gap: 20px; 
  justify-content: center;
  position: relative;
} 


#channel-blocks li {
  width: 95px;
  height: 95px;
  border-radius: 50%;
  background-color: var(--color--green-3);
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  /* animation: floatAnimation 5s ease-in-out infinite; */
}

 #channel-blocks li:nth-child(4n) {
  animation: floatAnimation 5s ease-in-out infinite;
  animation-delay: 0.6s;
} 

#channel-blocks li:nth-child(9n) {
  animation: floatAnimation1 6s ease-out infinite;
  animation-delay: 1s;
}

#channel-blocks li:nth-child(7n) {
  animation: floatAnimation2 4s linear infinite;
  animation-delay: 2s;
}

#channel-blocks li:nth-child(11n) {
  animation: floatAnimation2 8s cubic-bezier(0.18, -0.75, 0.20, 0.55) infinite;
  animation-delay: 4s;
}

/*  
sources used:
https://developer.mozilla.org/en-US/docs/Web/CSS/animation-timing-function
this source was helpful as it taught me about the different types of animation-timing-function and which each one does.
I expeirented with different ones to see which would be best for my lily pad animations. 
since  this was a piece of feedback i recieved from my project 4 grade to make the lily pad animations different, and less
like they are breathing, I decided to use 4 different animation-timing-functions to make them all different instead of using 
ease-in-out for all of them. instead, I used ease-in-out for the first one, ease-out for the second one, linear for the third one, and cubic-bezier for the last one.


https://www.w3schools.com/cssref/css3_pr_animation-timing-function.php
this source also helped my knowledge about the different types of animation-timing-function and how they work.
i learned about cubic bezier and how it is a custom timing function that you can create by using the cubic-bezier() function.
i learned you can Define your own values in the cubic-bezier function
Possible values are numeric values from 0 to 1
*/ 

 #channel-blocks li::after {
  content: ''; 
  position: absolute; 
  background-color: rgba(10, 119, 59, 0.8); 
  border-radius: 50%; 
  cursor: url('../images/cursor.png'), auto;
  width: 100%;
  height: 100%;
} 

/*this was the original animation i tried*/ 
/* @keyframes floatAnimation {
  0% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(+30px);
  }
  100% {
    transform: translateY(0);
  }
} */


#channel-blocks li:hover::after {
  display: none; 
}

#channel-blocks li:hover {
  border-radius: 0%; 
  width: 95px;
  height: 95px;
  border: var(--color--tertiary) 10px solid;
  background-color: #6B9A6F;
  cursor: pointer
}

dialog{
  width: 90vw;
  height: 50vh;
  background-color: var(--color--quartery);
  position:fixed;
  top: 50%;
  left: 50%;
  z-index:10000;
  transform: translate(-50%, -50%);
  padding: 10px;
  cursor: pointer;
}

.dialog-title {
  font-weight: bold;
  text-align: left;  
  color: var(--color--green-3)
}

.dialog-image-div {
 display: block;
  padding: 1em;
  object-fit: contain;
  object-position: left;
}

dialog img{
  margin: auto;
  display: block;
} 

.close{
  z-index:50000000;
  position: fixed;
  text-align: right;
  top: 0px;
  right: 0;
  padding-right: 10px;
  font-size: 10px;
  font-family: Arial, Helvetica, sans-serif;
  font-size: 30px;
}

.external-link{
  position: fixed;
  left: 55%;
  width: 45%;
  background-color: black;
  color: white;
  text-align: center;
  font-size: 16px;
  padding: 10px;
  bottom: 0;
}


dialog::backdrop {
  background-color: rgba(230, 221, 221, 0.75); 
  backdrop-filter: blur(10px); 
}

body:has(dialog[open]){
  overflow: hidden;
}

.image-block:has(dialog[open]) figure {
 filter: blur(1px);
}



#channel-blocks li .content {
  width: 100%;
  height: 100%;
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
  object-fit: cover;
} 

.audio-block audio {
  width: 280px;
  height: 200px;
}

.video-block video {
  width: 100%;
  max-width: 200px;
  height: auto;
  display: block;
}


.nav-text {
  color : var(--color--green-3);
  font-size: var(--nav-size);
  font-family: cinzel;
}


/* buttons */ 

/*link button*/
#channel-blocks.show-links .link-block {
  display: block;
}

#channel-blocks.show-links .video-block,
#channel-blocks.show-links .image-block,
#channel-blocks.show-links .audio-block,
#channel-blocks.show-links .text-block 
#channel-blocks.show-links .pdf-block {
  display: none;
}

/*video  button*/
#channel-blocks.show-video .video-block {
  display: block;
}

#channel-blocks.show-video .link-block,
#channel-blocks.show-video .image-block,
#channel-blocks.show-video .audio-block,
#channel-blocks.show-video .text-block {
  display: none;
}

/*text  button*/
#channel-blocks.show-text .text-block {
  display: block;
}

#channel-blocks.show-text .link-block,
#channel-blocks.show-text .video-block,
#channel-blocks.show-text .image-block,
#channel-blocks.show-text .audio-block {
  display: none;
}

/*image button*/
#channel-blocks.show-image .image-block {
  display: block;
}

#channel-blocks.show-image .video-block,
#channel-blocks.show-image .links-block,
#channel-blocks.show-image .audio-block,
#channel-blocks.show-image .text-block {
  display: none;
}

#show-links-button,
#show-video-button,
#show-text-button,
#show-image-button,
#show-all-button {
  font-family: cinzel;
  font-size: 20px;
  padding: 5px 20px; 
  gap: 1em;
  border-radius: 200px; 
  border: none; 
  background-color: var(--color--green-4); 
  color: var(--color--green-2); 
  cursor: pointer;
  margin-right: 12px;
  transition: background-color 0.3s ease;
}

#show-links-button:hover,
#show-video-button:hover,
#show-text-button:hover,
#show-image-button:hover,
#show-all-button:hover {
  background-color: var(--color--green-3); 
}



.filter-line {
  display: flex;   
  flex-direction: column;  
  text-align: center;          
  width: 100%;  
  height: auto;             
  padding: var(--spacing);  
  }


.image-scroll-container {
  display: flex; 
  flex-direction: row;
  overflow-x: auto; 
  gap: 50px; 
  padding: 20px;
}

.image-scroll-container:hover {
  filter: blur(0);
}

dialog [open] {
  display: grid; 
  grid-template-columns: repeat(2, minmax(0,1fr));
  inset: var(--spacing);

}




/* dialog{
  width: 200px;
  height: 400px;
  background-color: var(--color--quartery);
  position:fixed;
  top: 50%;
  left: 50%;
  z-index:10000;
  transform: translate(-50%, -50%);
} */
.dialog-image-div{
  padding: 1em;
  object-fit: contain;
  object-position: left;
}

dialog  img{
display: none;
} 

/* .external-link{
  position: relative;
  left: 62.5%;
  width: 40%;
  margin-top: 5%;
} */

dialog p{
  position: relative;
  text-align: left;
  max-width: 40%;
  width: 80%;
  font-size: 16px;
  color: var(--color--green-4);

}

dialog::backdrop {
  background-color: rgba(235, 225, 225, 0.75); 
  backdrop-filter: blur(20px); 
}

body:has(dialog[open]){
  overflow: hidden;
}

.image-block:has(dialog[open]) figure {
 filter: blur(1px);
}

img {
  max-block-size: 250px;
  max-inline-size: 250px;
}

footer {
  background-color: var(--color--green-3 );
  display: flex;
  padding: var(--spacing);
  justify-content: space-between;
  color: var(--color--quartery);
}


@media only screen and (min-width:800px) {

  /* @keyframes floatAnimation {
    0% {
      margin-top: 0px;
    }
    50% {
      margin-top: 6px;
    }
    100% {
      margin-top: 0px;
    }
  } */


  @keyframes floatAnimation {
    0%, 100% { transform: translateY(0); }
    55% { transform: translateY(-20px); }
  }
  
  @keyframes floatAnimation1 {
    0%, 100% { transform: translateX(0); }
    60% { transform: translateX(40px); }
  }
  
  @keyframes floatAnimation2 {
    0%, 100% { transform: rotate(0deg); }
    50% { transform: rotate(8deg); } 
  }
  
  @keyframes floatAnimation3 {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.8); } 
  }

  /* sources used:
  https://dev.to/ridoy_hasan/css-transforms-translate-rotate-scale-and-skew-4mbm?
  https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/skew
  https://www.joshwcomeau.com/animation/keyframe-animations/


  */

  .quote p {
    font-size: 1.6em;
  }

  header {
    width: 100%;
    height: 3em;
    background-color: var(--color--green-2);
    font-family: cinzel;
    font-size: var(--nav-size);
    color: var(--color--green-4);
    display: flex;
    align-items: center;
    justify-content: center;


    position: sticky;
    top: 0;
    z-index: 10000; 
  }

/*  took out the about page and just made the header the link at the top  also made this sticky*/

  p.nav-text {
    font-family: cinzel;
  }

  .description-text 
  {text-align: center;
  padding-left: 5em;
  padding-right: 5em;
}

.middle {
  height: 80%;}

  .filter-line {
      display: flex;                     
      justify-content: space-between;   
      width: 100%;                                          
      padding: 2em;          

      
  }

  .monet-cred {
    padding: 3em;
  }

  #show-all-button,  #show-text-button, #show-video-button, #show-image-button, #show-links-button {
    padding: 2em;
    margin-bottom: 1em;

  }
  
  #channel-blocks {
   display: grid;
    grid-template-columns: repeat(5, 1fr);  
    gap: 30px; 
    list-style: none;
    justify-content: center;
    position: relative;
  
.text-block {
  font-size: 16px;
}

  }
  dialog{
    width: 600px;
    height: 300px;
    background-color: var(--color--quartery);
    position:fixed;
    top: 50%;
    left: 50%;
    z-index:10000;
    transform: translate(-50%, -50%);
    border: 1px solid var(--color--tertiary);
    cursor: pointer;
  }

  /* .dialog-image-div{
display: none;
  } */
  
  dialog  img{
display: none;
  } 

  .close{
    z-index:50000000;
    position: fixed;
    padding: 30px;
    top:-20px;
    font-size: 40px;
  }
  .external-link{
    position: fixed;
    left: 55%;
    width: 45%;
    background-color: black;
    color: white;
    text-align: center;
    font-size: 16px;
    padding: 10px;
    bottom: 0px;
    right: 0;
  }
  
  dialog p{
    position: relative;
    left: 10%;
    width: 80%;
    font-size: 14px;
    padding: 0px;
    color: var(--color--green-4);
  
  }

.text-pop-up-title {
  left: 10%;
  width: 80%;
  font-size: 18px;
  font-weight: bold;
  text-align: left; 
  margin-bottom: 10px; 
  color: var(--color--green-3);
}


.dialog-title {
  left: 10%;
  width: 80%;
  font-size: 18px;
  font-weight: bold;
  text-align: left; 
  margin-bottom: 10px; 
  color: var(--color--green-3)
}

  :root {
  --title-size: 9em;
  --subheading-size: 35px;
  --spacing-size:20px;
  }
  
  .filter-line {
    display: flex;
    flex-direction: row;
    justify-content: center;
    }

    #channel-blocks li {
      width: 150px;
      height: 150px; 
      border-radius: 50%;
    }


      #channel-blocks li:hover {
        border-radius: 0%; 
        width: 150px;
        height: 150px;
        cursor: url('../images/cursor.png'), auto;
      }
         
      .bottom {
        margin-left: 4em;
        margin-right: 4em;
      }
        
    body {
     background-color: var(--color--blue);
    }

    }

/* recap of what i changed for the second submission:
1. feedback:
Staggering these animations with a bit of nth-child counting delays would make it feel less like it is “breathing.” 
how i addressed it: I added  new animations to the lily pads to make them look like they are more realistic.
i added nth-child to the lily pads so that they all have different animation timings (line 278-296) 
i did this by using different animation-timing-functions for each lily pad, and making them all different. (644-662)
i made different float animations, instead of having all of them be under the same float animation so i could apply different animation timings to the m(line)

2. feedback:
- I think you could start with the water lilies and then provide context, rathern than provide a landing moment.
-and some of the more scripty faces are hard to read at length, and with as much centering. I’d like to see the menu brought down the page, and want the controls there to read as more “button-y.” 
how i addressed it: deleted the about landing page, and made the lily pad page the index. then I fixed a new header to the top of the page
made controls more buttony by the padding background color and hover color. (line 504-520)
that has a link to the arena page, and i made it sticky so that it is always at the top of the page. (line 675-690)

feedback:
- Typesetting could go for another pass, I think some of the ratios/spacing are a little tight and reducing the number of fonts.
-In the work (as shown), my initial impression is that there are a few too many competing typographic voices here, 
how i addressed it: I only kept 2 fonts ()changed the font sizes of the titles and subheadings to be larger, and made the spacing between them larger as well. (line 5-13)

feedback:
-The Lilies background here is competing with the blocks—maybe just the color palette as the visual connection/through-line? 
how i addressed it: I changed the background color to be a solid color, so every background is a solid color (line )

feedback:
I want to see the entire artwork along with the tombstone information.
how i addressed it: I added the image to the tombstone in the dialog modal so now you see the image and description (line --)
*/